name: Build and Publish
on: [ push, workflow_dispatch ]
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'graalvm'
      - name: Grant execute permission for gradlew
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x gradlew
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Execute Gradle build
        run: ./gradlew build
      - name: Create dir if not exists
        run: |
          if [ ! -d "releases" ]; then
            echo "Creating directory..."
            mkdir -p release
            touch releases/.placeholder
          else
            echo "directory already exists"
          fi

          if [ ! -d "snapshots" ]; then
            echo "Creating directory..."
            mkdir -p release
            touch snapshots/.placeholder
          else
            echo "directory already exists"
          fi

          if [ ! -d "plugins" ]; then
            echo "Creating directory..."
            mkdir -p release
            touch plugins/.placeholder
          else
            echo "directory already exists"
          fi
          if [ ! -d "build/pages" ]; then
            echo "Creating directory..."
            mkdir -p build/pages
          else
            echo "directory already exists"
          fi
          
      - name: Copy dir to build pages
        run: |
          echo "Copy dir to build/pages"   
          cp -r releases build/pages/ 
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build/pages/plugins'
      - name: Verify copy
        run: |
          echo "Directory structure:"
          ls -l
          echo "Build directory content:"
          ls -l build/pages/
          echo "Releases directory content:"
          ls -l releases/
          echo "Snapshots directory content:"
          ls -l snapshots/
          echo "Plugins directory content:"
          ls -l plugins/
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      
      
