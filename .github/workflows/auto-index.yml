name: Generate Maven Repository Index

permissions:
  contents: write

on:
  push:
    branches: [ main ]
    paths:
      - 'releases/**'  # 只有当目录内容变化时才触发
      - 'snapshots/**'
      - 'plugins/**'
  workflow_dispatch:     # 允许手动触发

jobs:
  generate-index:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史记录，可能需要用于版本比较

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Download Maven Indexer
        run: |
          # 下载最新版indexer-cli
          INDEXER_VERSION=$(curl -s https://repo.maven.apache.org/maven2/org/apache/maven/indexer/indexer-cli/maven-metadata.xml | grep -oP '(?<=<latest>)[^<]+')
          wget https://repo.maven.apache.org/maven2/org/apache/maven/indexer/indexer-cli/${INDEXER_VERSION}/indexer-cli-${INDEXER_VERSION}-cli.jar -O indexer-cli.jar
          echo "使用 indexer-cli 版本: ${INDEXER_VERSION}"

      - name: Generate index
        run: |
          # 先清理索引目录，防止残留文件导致冲突
          rm -rf releases/.index snapshots/.index plugins/.index
          mkdir -p releases/.index
          mkdir -p snapshots/.index
          mkdir -p plugins/.index
          
          # 生成索引（不要提前创建属性文件）
          java -jar indexer-cli.jar \
            -c \
            -i ./snapshots/.index \
            -n github-snapshots-repo \
            -r snapshots

          # 生成属性文件
          cat <<EOF > ./releases/.index/nexus-maven-repository-index.properties
          #Nexus Index Properties
          version=1
          incremental=false
          repositoryId=github-releases-repo
          timestamp=$(date +%s000)
          description=Maven repository hosted on GitHub
          EOF
          
          cat <<EOF > ./snapshots/.index/nexus-maven-repository-index.properties
          #Nexus Index Properties
          version=1
          incremental=false
          repositoryId=github-snapshots-repo
          timestamp=$(date +%s000)
          description=Maven repository hosted on GitHub
          EOF
          
          cat <<EOF > ./plugins/.index/nexus-maven-repository-index.properties
          #Nexus Index Properties
          version=1
          incremental=false
          repositoryId=github-plugins-repo
          timestamp=$(date +%s000)
          description=Maven repository hosted on GitHub
          EOF

          du -sh ./releases/.index
          du -sh ./snapshots/.index
          du -sh ./plugins/.index

      - name: Generate Markdown index
        run: |
          REPOS=("releases" "snapshots" "plugins")
          REPO_TITLES=("Release" "Snapshot" "Plugin")
          TIMESTAMP=$(date "+%Y-%m-%d %H:%M:%S")
          REPO_OWNER="${GITHUB_REPOSITORY_OWNER}"
          REPO_NAME="${GITHUB_REPOSITORY#*/}"
          
          # 创建一个.nojekyll文件以禁止GitHub Pages的Jekyll处理
          touch .nojekyll
          
          # 生成子仓库索引页面（纯Markdown格式）
          for i in "${!REPOS[@]}"; do
            repo="${REPOS[$i]}"
            title="${REPO_TITLES[$i]}"
          
            cat > ./$repo/index.md << EOF
          # Maven 仓库 - $title
          
          ## 仓库内容
          
          EOF
          
            # 生成子仓库内容索引
            if [ -d "./$repo/org" ]; then
              echo "### org" >> ./$repo/index.md
          
              # 扫描并生成组织和项目的层级结构
              for groupId in $(find ./$repo/org -mindepth 1 -maxdepth 1 -type d | sort); do
                groupName=$(basename "$groupId")
                echo "- [$groupName](org/$groupName/index.md)" >> ./$repo/index.md
          
                mkdir -p "$groupId"
                cat > "$groupId/index.md" << GROUP_EOF
          # $groupName
          
          GROUP_EOF
          
                for artifactId in $(find "$groupId" -mindepth 1 -maxdepth 1 -type d | sort); do
                  artifactName=$(basename "$artifactId")
                  echo "  - [$artifactName]($artifactName/index.md)" >> "$groupId/index.md"
          
                  mkdir -p "$artifactId"
                  cat > "$artifactId/index.md" << ARTIFACT_EOF
          # $artifactName
          
          ## 可用版本
          
          ARTIFACT_EOF
          
                  # 列出版本
                  for versionDir in $(find "$artifactId" -mindepth 1 -maxdepth 1 -type d | sort); do
                    versionName=$(basename "$versionDir")
                    echo "- [$versionName]($versionName/)" >> "$artifactId/index.md"
                  done
                done
              done
            else
              echo "暂无内容" >> ./$repo/index.md
            fi
          
            cat >> ./$repo/index.md << EOF
          
          [返回主页](../index.md)
          
          ---
          
          最后更新时间: $TIMESTAMP
          EOF
          done
          
          # 生成主页（纯Markdown格式）
          cat > ./index.md << EOF
          # Maven 仓库索引
          
          这是一个托管在 GitHub Pages 上的 Maven 仓库。选择下面的仓库类型进行访问：
          
          - [Release](./releases/index.md)
          - [Snapshot](./snapshots/index.md)
          - [Plugins](./plugins/index.md)
          
          ---
          
          最后更新时间: $TIMESTAMP
          EOF

      # 生成Maven索引和Markdown文档后直接提交
      - name: Commit and push index
        run: |
          # 配置git用户
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # 检查是否有索引文件变化
          git add releases/.index snapshots/.index plugins/.index
          git add index.md releases/index.md snapshots/index.md plugins/index.md
          
          # 添加所有生成的索引文件
          find . -name "index.md" -exec git add {} \;
          
          if ! git diff --cached --quiet; then
            git commit -m "Update Maven repository index [skip ci]"
            git push
          else
            echo "No changes in index files"
          fi
